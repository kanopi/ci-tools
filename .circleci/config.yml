defaults: &defaults
  working_directory: /app
  docker:
      - image: docker:18.09.3-git

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar

  test:
    working_directory: /app
    docker:
      - image: debian:9
    steps:
      - run:
          name: Install Dependencies
          command: |
            set -e
            DOCKERVERSION=18.09.3
            apt-get update \
              && mkdir -p /usr/share/man/man1 \
              && apt-get install -y \
                git mercurial xvfb apt \
                locales sudo openssh-client ca-certificates tar gzip parallel \
                net-tools netcat unzip zip bzip2 gnupg curl wget \
              && curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKERVERSION}.tgz \
              && tar xzvf docker-${DOCKERVERSION}.tgz --strip 1 -C /usr/local/bin docker/docker \
              && rm docker-${DOCKERVERSION}.tgz
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Install BATS-CORE
          command: |
            set -e
            git clone https://github.com/bats-core/bats-core.git
            cd bats-core
            ./install.sh /usr/local
      - run:
          name: Testing Software Versions
          command: bats /app/tests/software.bats

  build_master:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - deploy:
          name: Push Docker image
          command: |
            set -e

            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker tag app kanopi/ci:edge
            docker push kanopi/ci:edge

  build_tag:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - deploy:
          name: Push Docker image
          command: |
            set -e
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker tag app kanopi/ci:${CIRCLE_TAG}
            docker push kanopi/ci:${CIRCLE_TAG}
            docker tag app kanopi/ci:latest
            docker push kanopi/ci:latest

workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - build_master:
          requires:
            - test
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/
      - build_tag:
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
