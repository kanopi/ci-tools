version: 2.1

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: kanopi/ci-tools
    docker:
      - image: circleci/buildpack-deps:stretch

jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Generate Checksum
          command: |
            find . -not \( -path .circleci -prune \) -not \( -path .git -prune \) -type f -exec md5sum {} \; | md5sum > .dockerbuild
      - restore_cache:
          key: docker-{{ .Branch }}-{{ checksum ".dockerbuild" }}
          paths:
            - /tmp/workspace/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /tmp/workspace/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build -t ${IMAGE_NAME}:latest .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /tmp/workspace
            docker save -o /tmp/workspace/app.tar ${IMAGE_NAME}
      - save_cache:
          key: docker-{{ .Branch }}-{{ checksum '.dockerbuild' }}
          paths:
            - /tmp/workspace/app.tar
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - ./app.tar

  test:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/app.tar
      - run:
          name: Install BATS-CORE
          command: |
            set -e
            git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
            cd /tmp/bats-core
            sudo /tmp/bats-core/install.sh /usr/local
      - checkout
      - run:
          name: Create Docker Volume
          command: docker run -d -v /var/www --name project-root circleci/buildpack-deps:stretch tail -f /dev/null
      - run:
          name: Download Drupal Project
          command: |
            docker exec -i project-root git clone --depth=1 https://git.drupalcode.org/project/drupal.git /tmp/project
            docker exec -i project-root mv /tmp/project/{,.[^.]}* /var/www/
      - run:
          name: Testing Software Versions
          command: bats tests/software.bats

  build_master:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/app.tar
      - deploy:
          name: Push Docker image
          command: |
            set -e

            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker tag app ${IMAGE_NAME}:edge
            docker push ${IMAGE_NAME}:edge

  build_tag:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/app.tar
      - deploy:
          name: Push Docker image
          command: |
            set -e
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker tag app ${IMAGE_NAME}:${CIRCLE_TAG}
            docker push ${IMAGE_NAME}:${CIRCLE_TAG}
            docker tag app ${IMAGE_NAME}:latest
            docker push ${IMAGE_NAME}:latest

workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - build_master:
          requires:
            - test
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/
      - build_tag:
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
